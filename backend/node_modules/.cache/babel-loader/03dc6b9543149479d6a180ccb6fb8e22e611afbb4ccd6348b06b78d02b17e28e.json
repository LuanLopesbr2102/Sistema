{"ast":null,"code":"const API_BASE_URL = \"http://localhost:3001\";\nclass GeneroService {\n  async obterTodosGeneros() {\n    const response = await fetch(`${API_BASE_URL}/genero`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      console.log('Erro ');\n    }\n    const dados = await response.json();\n    return dados;\n  }\n  async cadastrarGenero(generoData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/genero`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(generoData)\n      });\n      if (!response.ok) {\n        console.error('Erro ao cadastrar gênero:', response.statusText);\n        throw new Error('Erro ao cadastrar gênero.');\n      }\n      const resultado = await response.json();\n      return resultado;\n    } catch (error) {\n      console.error('Erro ao cadastrar gênero:', error.message);\n      throw error;\n    }\n  }\n  async updateGenero(id, dadosGenero) {\n    const response = await fetch(`http://localhost:3001/genero/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dadosGenero)\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao editar gênero.');\n    }\n    return response.json();\n  }\n  async deleteGenero(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/genero/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao deletar gênero!');\n      }\n    } catch (error) {\n      console.error('Erro ao deletar gênero: ', error);\n      throw error;\n    }\n  }\n}\nexport default GeneroService;","map":{"version":3,"names":["API_BASE_URL","GeneroService","obterTodosGeneros","response","fetch","headers","ok","console","log","dados","json","cadastrarGenero","generoData","method","body","JSON","stringify","error","statusText","Error","resultado","message","updateGenero","id","dadosGenero","deleteGenero"],"sources":["C:/Users/Luan/Desktop/Trabalho Full/frontend/src/Componentes/services/GeneroService.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:3001\";\r\n\r\nclass GeneroService {\r\n    async obterTodosGeneros() {\r\n        const response = await fetch(`${API_BASE_URL}/genero`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        if (!response.ok) {\r\n            console.log('Erro ');\r\n        }\r\n\r\n        const dados = await response.json();\r\n        return dados;\r\n    }\r\n\r\n    async cadastrarGenero(generoData) {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/genero`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(generoData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Erro ao cadastrar gênero:', response.statusText);\r\n                throw new Error('Erro ao cadastrar gênero.');\r\n            }\r\n\r\n            const resultado = await response.json();\r\n            return resultado;\r\n        } catch (error) {\r\n            console.error('Erro ao cadastrar gênero:', error.message);\r\n            throw error;\r\n        }\r\n    }\r\n    async updateGenero(id, dadosGenero) {\r\n        const response = await fetch(`http://localhost:3001/genero/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(dadosGenero),\r\n        });\r\n    \r\n        if (!response.ok) {\r\n            throw new Error('Erro ao editar gênero.');\r\n        }\r\n    \r\n        return response.json();\r\n    }\r\n    \r\n\r\n\r\n    async deleteGenero(id) {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/genero/${id}`, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao deletar gênero!');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao deletar gênero: ', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n}\r\nexport default GeneroService;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,aAAa,CAAC;EAChB,MAAMC,iBAAiBA,CAAA,EAAG;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,SAAQ,EACjD;MACIK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACN,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;IAEA,MAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC,OAAOD,KAAK;EAChB;EAEA,MAAME,eAAeA,CAACC,UAAU,EAAE;IAC9B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,SAAQ,EAAE;QACnDa,MAAM,EAAE,MAAM;QACdR,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;MACnC,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACG,EAAE,EAAE;QACdC,OAAO,CAACU,KAAK,CAAC,2BAA2B,EAAEd,QAAQ,CAACe,UAAU,CAAC;QAC/D,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;MAEA,MAAMC,SAAS,GAAG,MAAMjB,QAAQ,CAACO,IAAI,CAAC,CAAC;MACvC,OAAOU,SAAS;IACpB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACI,OAAO,CAAC;MACzD,MAAMJ,KAAK;IACf;EACJ;EACA,MAAMK,YAAYA,CAACC,EAAE,EAAEC,WAAW,EAAE;IAChC,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BmB,EAAG,EAAC,EAAE;MAC/DV,MAAM,EAAE,KAAK;MACbR,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACrB,QAAQ,CAACG,EAAE,EAAE;MACd,MAAM,IAAIa,KAAK,CAAC,wBAAwB,CAAC;IAC7C;IAEA,OAAOhB,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1B;EAIA,MAAMe,YAAYA,CAACF,EAAE,EAAE;IACnB,IAAI;MACA,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,WAAUuB,EAAG,EAAC,EAAE;QACzDV,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;QACd,MAAM,IAAIa,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACf;EACJ;AAEJ;AACA,eAAehB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
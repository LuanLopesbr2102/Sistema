{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001';\nclass AutorService {\n  async getAllAutores() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor/`);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar Autores');\n      }\n      const dados = await response.json();\n      return dados;\n    } catch (error) {\n      console.error('Erro ao buscar autores: ', error);\n      throw error;\n    }\n  }\n  async getAutoresByID(ID) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor/${ID}`);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar Autores');\n      }\n      const dados = await response.json();\n      return dados;\n    } catch (error) {\n      console.error('Erro ao buscar autores: ', error);\n      throw error;\n    }\n  }\n  async deleteAutor(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao deletar autor!');\n      }\n    } catch (error) {\n      console.error('Erro ao deletar autor: ', error);\n      throw error;\n    }\n  }\n  async updateAutor(ID, autorData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor/${ID}`, {\n        method: \"PUT\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(autorData)\n      });\n      if (!response.ok) {\n        throw new Error('erro ao atualizar autor');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async createAutor(autorData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(autorData)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao cadastrar autor!');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async filtrar(filtroData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/autor/filtrar`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(filtroData)\n      });\n      if (!response.ok) {\n        throw new Error(`Erro ao filtrar autor! Status: ${response.status}, Mensagem: ${response.statusText}`);\n      }\n      return response.json();\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default AutorService;","map":{"version":3,"names":["API_BASE_URL","AutorService","getAllAutores","response","fetch","ok","Error","dados","json","error","console","getAutoresByID","ID","deleteAutor","id","method","updateAutor","autorData","headers","body","JSON","stringify","createAutor","filtrar","filtroData","status","statusText"],"sources":["C:/Users/Luan/Desktop/Trabalho Full/frontend/src/Componentes/services/autorService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3001'\r\n\r\nclass AutorService{\r\n\r\n\r\n    async getAllAutores(){\r\n        try{\r\n            const response = await fetch(`${API_BASE_URL}/autor/`)\r\n            if(!response.ok){\r\n                throw new Error('Erro ao buscar Autores')\r\n            }\r\n            const dados = await response.json()\r\n            return dados\r\n\r\n\r\n        }catch(error){\r\n            console.error('Erro ao buscar autores: ', error);\r\n            throw error;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async getAutoresByID(ID){\r\n        try{\r\n            const response = await fetch(`${API_BASE_URL}/autor/${ID}`)\r\n            if(!response.ok){\r\n                throw new Error('Erro ao buscar Autores')\r\n            }\r\n            const dados = await response.json()\r\n            return dados\r\n\r\n\r\n        }catch(error){\r\n            console.error('Erro ao buscar autores: ', error)\r\n            throw error;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async deleteAutor(id){\r\n        try{\r\n            const response = await fetch(`${API_BASE_URL}/autor/${id}`,{\r\n                method:\"DELETE\",\r\n            })\r\n            if(!response.ok){\r\n                throw new Error('Erro ao deletar autor!')\r\n            }\r\n\r\n        }catch(error){\r\n            console.error('Erro ao deletar autor: ', error)\r\n            throw error;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async updateAutor(ID,autorData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/autor/${ID}`,{\r\n                method:\"PUT\",\r\n                headers:{\r\n                    'content-type': 'application/json'\r\n                },\r\n                body:JSON.stringify(autorData)\r\n\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro ao atualizar autor')\r\n            }\r\n\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    async createAutor(autorData){\r\n        try{\r\n            const response = await fetch(`${API_BASE_URL}/autor`,{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify(autorData)\r\n            })\r\n            if(!response.ok){\r\n                throw new Error('Erro ao cadastrar autor!')\r\n            }\r\n\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async filtrar(filtroData) {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/autor/filtrar`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(filtroData)\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`Erro ao filtrar autor! Status: ${response.status}, Mensagem: ${response.statusText}`);\r\n            }\r\n    \r\n            return response.json();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n\r\n\r\n}\r\nexport default AutorService"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
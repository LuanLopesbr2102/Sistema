{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001';\nclass LivroService {\n  async getAllLivros() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro`);\n      if (!response.ok) {\n        throw new Error('erro de busca');\n      }\n      const dados = await response.json();\n      return dados;\n    } catch (error) {\n      console.error('erro de busca:', error);\n      throw error;\n    }\n  }\n  async createLivro(livroData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro`, {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(livroData)\n      });\n      if (!response.ok) {\n        throw new Error('erro ao cadastrar');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async buscar(filtroData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro/buscar`, {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(filtroData)\n      });\n      if (!response.ok) {\n        throw new Error('erro ao buscar');\n      }\n      return await response.json();\n    } catch (error) {\n      throw error;\n    }\n  }\n  async updateLivro(codigoLivro, livroData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`, {\n        method: \"PUT\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(livroData)\n      });\n      if (!response.ok) {\n        throw new Error('erro ao atualizar');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async getLivrosById(codigoLivro) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`);\n      if (!response.ok) {\n        throw new Error('erro de busca');\n      }\n      const dados = await response.json();\n      return dados;\n    } catch (error) {\n      console.error('erro de busca:', error);\n      throw error;\n    }\n  }\n  async deleteLivro(codigoLivro) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`, {\n        method: \"delete\"\n      });\n      if (!response.ok) {\n        throw new Error('erro de deletar');\n      }\n    } catch (error) {\n      console.error('erro de deletar:', error);\n      throw error;\n    }\n  }\n}\nexport default LivroService;","map":{"version":3,"names":["API_BASE_URL","LivroService","getAllLivros","response","fetch","ok","Error","dados","json","error","console","createLivro","livroData","method","headers","body","JSON","stringify","buscar","filtroData","updateLivro","codigoLivro","getLivrosById","deleteLivro"],"sources":["C:/Users/Luan/Desktop/Trabalho Full/frontend/src/Componentes/services/livroService.js"],"sourcesContent":["const API_BASE_URL ='http://localhost:3001';\r\n\r\nclass LivroService{\r\n\r\n\r\n\r\n    async getAllLivros(){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro`)\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro de busca')\r\n            }\r\n            const dados = await response.json();\r\n            return dados;\r\n\r\n        } catch (error) {\r\n            console.error('erro de busca:',error);\r\n            throw error;\r\n\r\n        }\r\n    }\r\n    async createLivro(livroData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro`,{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'content-type': 'application/json'\r\n                },\r\n                body:JSON.stringify(livroData)\r\n\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro ao cadastrar')\r\n            }\r\n\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async buscar(filtroData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro/buscar`,{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'content-type': 'application/json'\r\n                },\r\n                body:JSON.stringify(filtroData)\r\n\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro ao buscar')\r\n            }\r\n            return await response.json()\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async updateLivro(codigoLivro,livroData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`,{\r\n                method:\"PUT\",\r\n                headers:{\r\n                    'content-type': 'application/json'\r\n                },\r\n                body:JSON.stringify(livroData)\r\n\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro ao atualizar')\r\n            }\r\n\r\n        } catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    async getLivrosById(codigoLivro){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`)\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro de busca')\r\n            }\r\n            const dados = await response.json();\r\n            return dados;\r\n\r\n        } catch (error) {\r\n            console.error('erro de busca:',error);\r\n            throw error;\r\n\r\n        }\r\n    }\r\n\r\n    async deleteLivro(codigoLivro){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/cadlivro/${codigoLivro}`,{\r\n                method:\"delete\"\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('erro de deletar')\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error('erro de deletar:',error);\r\n            throw error;\r\n\r\n        }\r\n\r\n    }\r\n    \r\n\r\n}\r\nexport default LivroService"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
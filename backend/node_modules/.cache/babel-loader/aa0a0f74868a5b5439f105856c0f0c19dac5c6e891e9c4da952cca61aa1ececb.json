{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001';\nclass EditoraService {\n  async getAllEditora() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/editoras/`);\n      if (!response.ok) {\n        throw new Error('Erro ao buscar Editora');\n      }\n      const dados = await response.json();\n      return dados;\n    } catch (error) {\n      console.error('Erro ao buscar Editora:', error);\n    }\n  }\n  async filtrar(filtroData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/editoras/filtrar`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(filtroData)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao filtrar Editora');\n      }\n      return response.json();\n    } catch (error) {\n      throw error;\n    }\n  }\n  async creatEditora(editoraData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/editoras/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editoraData)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao cadastrar Editora');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async updateEditora(id, editoraData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/editoras/${id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editoraData)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao atualizar Editora');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  async deleteEditora(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/editoras/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao deletar Editora');\n      }\n    } catch (error) {\n      console.error('Erro ao deletar editora', error);\n      throw error;\n    }\n  }\n}\nexport default EditoraService;","map":{"version":3,"names":["API_BASE_URL","EditoraService","getAllEditora","response","fetch","ok","Error","dados","json","error","console","filtrar","filtroData","method","headers","body","JSON","stringify","creatEditora","editoraData","updateEditora","id","deleteEditora"],"sources":["C:/Users/Luan/Desktop/Trabalho Full/frontend/src/Componentes/services/EditoraService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3001';\r\n\r\nclass EditoraService{\r\n\r\n    async getAllEditora(){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/editoras/`)\r\n\r\n            if(!response.ok){\r\n                throw new Error('Erro ao buscar Editora')\r\n            }\r\n             const dados = await response.json();\r\n             return dados;\r\n\r\n\r\n        } catch (error) {\r\n            console.error('Erro ao buscar Editora:', error);\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    async filtrar(filtroData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/editoras/filtrar`,{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                },\r\n\r\n                body:JSON.stringify(filtroData)\r\n            });\r\n            if(!response.ok){\r\n                throw new Error('Erro ao filtrar Editora')\r\n            }\r\n            return response.json()\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    async creatEditora(editoraData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/editoras/`,{\r\n                method:\"POST\",\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                },\r\n\r\n                body:JSON.stringify(editoraData)\r\n            })\r\n            if(!response.ok){\r\n                throw new Error('Erro ao cadastrar Editora')\r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async updateEditora(id,editoraData){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/editoras/${id}`,{\r\n                method:\"PUT\",\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                },\r\n\r\n                body:JSON.stringify(editoraData)\r\n            })\r\n            if(!response.ok){\r\n                throw new Error('Erro ao atualizar Editora')\r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    async deleteEditora(id){\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/editoras/${id}`,{\r\n                method:\"DELETE\",\r\n                \r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error('Erro ao deletar Editora')\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao deletar editora', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nexport default EditoraService;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,cAAc;EAEhB,MAAMC,aAAaA,CAAA,EAAE;IACjB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,YAAW,CAAC;MAEzD,IAAG,CAACG,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACC,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACnC,OAAOD,KAAK;IAGjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAEnD;EACJ;EAGA,MAAME,OAAOA,CAACC,UAAU,EAAC;IACrB,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,mBAAkB,EAAC;QAC5Da,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QAEDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,UAAU;MAClC,CAAC,CAAC;MACF,IAAG,CAACT,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MACA,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAGA,MAAMS,YAAYA,CAACC,WAAW,EAAC;IAC3B,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,YAAW,EAAC;QACrDa,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QAEDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACE,WAAW;MACnC,CAAC,CAAC;MACF,IAAG,CAAChB,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMW,aAAaA,CAACC,EAAE,EAACF,WAAW,EAAC;IAC/B,IAAI;MACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,aAAYqB,EAAG,EAAC,EAAC;QAC1DR,MAAM,EAAC,KAAK;QACZC,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB,CAAC;QAEDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACE,WAAW;MACnC,CAAC,CAAC;MACF,IAAG,CAAChB,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;EAIA,MAAMa,aAAaA,CAACD,EAAE,EAAC;IACnB,IAAI;MACA,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,aAAYqB,EAAG,EAAC,EAAC;QAC1DR,MAAM,EAAC;MAEX,CAAC,CAAC;MAEF,IAAG,CAACV,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACf;EACJ;AACJ;AACA,eAAeR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}